import{o as a,c as s,a as n}from"./app.82674dcb.js";const e='{"title":"Assertions","description":"","frontmatter":{},"headers":[{"level":2,"title":"Subjects","slug":"subjects"},{"level":3,"title":"text","slug":"text"},{"level":3,"title":"class","slug":"class"},{"level":3,"title":"empty","slug":"empty"},{"level":3,"title":"disabled","slug":"disabled"},{"level":3,"title":"length","slug":"length"},{"level":3,"title":"value","slug":"value"},{"level":3,"title":"keys","slug":"keys"},{"level":3,"title":"attr","slug":"attr"},{"level":2,"title":"Verbs","slug":"verbs"},{"level":3,"title":"equals","slug":"equals"},{"level":3,"title":"contains","slug":"contains"},{"level":3,"title":"includes","slug":"includes"},{"level":3,"title":"exist","slug":"exist"}],"relativePath":"api/assertions.md","lastUpdated":1616507373458}',t={},o=n('<h1 id="assertions"><a class="header-anchor" href="#assertions" aria-hidden="true">#</a> Assertions</h1><p>Assertions take the form of</p><div class="language-js"><pre><code>should<span class="token punctuation">.</span><span class="token constant">SUBJECT</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token constant">SUBJECT_ARG</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">.</span>not<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token constant">VERB</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token constant">VERB_ARG</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n</code></pre></div><p>or in the case of boolean subjects:</p><div class="language-js"><pre><code>should<span class="token punctuation">[</span><span class="token punctuation">.</span>not<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">.</span>be<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token constant">SUBJECT</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token constant">SUBJECT_ARG</span><span class="token punctuation">)</span><span class="token punctuation">]</span>\n</code></pre></div><p>with an arbitrary amount of filler words in between.</p><h2 id="subjects"><a class="header-anchor" href="#subjects" aria-hidden="true">#</a> Subjects</h2><h3 id="text"><a class="header-anchor" href="#text" aria-hidden="true">#</a> text</h3><p>Extracts the <code>textContent</code> from the subject element using playwrights <a href="https://playwright.dev/docs/api/class-elementhandle#elementhandletextcontent" target="_blank" rel="noopener noreferrer">textContent</a></p><div class="language-js"><pre><code><span class="token keyword">await</span> element<span class="token punctuation">.</span>should<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">text</span><span class="token punctuation">(</span><span class="token string">&#39;someText&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="class"><a class="header-anchor" href="#class" aria-hidden="true">#</a> class</h3><p>Extracts the <code>classList</code> from the subject element</p><div class="language-js"><pre><code><span class="token keyword">await</span> element<span class="token punctuation">.</span>should<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">class</span><span class="token punctuation">(</span><span class="token string">&#39;some-class&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="empty"><a class="header-anchor" href="#empty" aria-hidden="true">#</a> empty</h3><p>Checks if subject element matches <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled" target="_blank" rel="noopener noreferrer">:empty</a> selector</p><div class="language-js"><pre><code><span class="token keyword">await</span> element<span class="token punctuation">.</span>should<span class="token punctuation">.</span>be<span class="token punctuation">.</span>empty\n</code></pre></div><h3 id="disabled"><a class="header-anchor" href="#disabled" aria-hidden="true">#</a> disabled</h3><p>Checks if subject element matches <a href="https://developer.mozilla.org/en-US/docs/Web/CSS/:disabled" target="_blank" rel="noopener noreferrer">:disabled</a> selector</p><div class="language-js"><pre><code><span class="token keyword">await</span> element<span class="token punctuation">.</span>should<span class="token punctuation">.</span>be<span class="token punctuation">.</span>disabled\n</code></pre></div><h3 id="length"><a class="header-anchor" href="#length" aria-hidden="true">#</a> length</h3><h3 id="value"><a class="header-anchor" href="#value" aria-hidden="true">#</a> value</h3><p>Extracts the <code>value</code> property of the subject element.<br> This is <strong>different</strong> from <code>attr(&#39;value&#39;)</code>, which only extracts the initial value.</p><div class="language-js"><pre><code><span class="token keyword">await</span> element<span class="token punctuation">.</span>should<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token string">&#39;someValue&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h3 id="keys"><a class="header-anchor" href="#keys" aria-hidden="true">#</a> keys</h3><h3 id="attr"><a class="header-anchor" href="#attr" aria-hidden="true">#</a> attr</h3><p>Extracts an attribute from the subject element using playwrights <a href="https://playwright.dev/docs/api/class-elementhandle#elementhandlegetattributename" target="_blank" rel="noopener noreferrer">getAttribute</a></p><div class="language-js"><pre><code><span class="token keyword">await</span> element<span class="token punctuation">.</span>should<span class="token punctuation">.</span>have<span class="token punctuation">.</span><span class="token function">attribute</span><span class="token punctuation">(</span><span class="token string">&#39;some-attribute&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equaling</span><span class="token punctuation">(</span><span class="token string">&#39;someValue&#39;</span><span class="token punctuation">)</span>\n</code></pre></div><h2 id="verbs"><a class="header-anchor" href="#verbs" aria-hidden="true">#</a> Verbs</h2><h3 id="equals"><a class="header-anchor" href="#equals" aria-hidden="true">#</a> equals</h3><p>Alias <code>equal</code>, <code>equaling</code></p><h3 id="contains"><a class="header-anchor" href="#contains" aria-hidden="true">#</a> contains</h3><p>Alias <code>contain</code>, <code>containing</code></p><h3 id="includes"><a class="header-anchor" href="#includes" aria-hidden="true">#</a> includes</h3><p>Alias <code>include</code>, <code>including</code></p><h3 id="exist"><a class="header-anchor" href="#exist" aria-hidden="true">#</a> exist</h3><p>Alias <code>exists</code>, <code>existing</code></p>',36);t.render=function(n,e,t,p,c,l){return a(),s("div",null,[o])};export default t;export{e as __pageData};
